apiVersion: apps/v1
kind: StatefulSet
metadata:
 name: pgadmin
 namespace: default
spec:
 serviceName: pgadmin-service
 podManagementPolicy: Parallel
 replicas: 1
 updateStrategy:
   type: RollingUpdate
 selector:
   matchLabels:
     app: pgadmin
 template:
   metadata:
     labels:
       app: pgadmin
   spec:
     terminationGracePeriodSeconds: 10
     imagePullSecrets:
       - name: fastlca-reg-cred
     containers:
       - name: pgadmin
         image: "ghcr.io/bh-ent-tech/dpage/pgadmin4:7.0"
         imagePullPolicy: Always
         securityContext:
           allowPrivilegeEscalation: false         
         env:
         - name: PGADMIN_DISABLE_POSTFIX
           value: "1"         
         - name: PGADMIN_DEFAULT_EMAIL
           value: user@pgadmin.com
         - name: PGADMIN_DEFAULT_PASSWORD
           valueFrom:
             secretKeyRef:
               name: pgadmin
               key: pgadmin-password
         - name: PGADMIN_CONFIG_ENHANCED_COOKIE_PROTECTION
           value: "False"
         ports:
         - name: http
           containerPort: 80
           protocol: TCP
         volumeMounts:
         - name: pgadmin-config
           mountPath: /pgadmin4/servers.json
           subPath: servers.json
           readOnly: true
         - name: pgadmin-data
           mountPath: /var/lib/pgadmin
         securityContext:
           runAsUser: 0
           runAsGroup: 0           
     volumes:
     - name: pgadmin-config
       configMap:
         name: pgadmin-config
 volumeClaimTemplates:
 - metadata:
     name: pgadmin-data
   spec:
     accessModes: [ "ReadWriteOnce" ]
     resources:
       requests:
         storage: 3Gi
     volumeName: pgadmin-pv1
     storageClassName: manual



apiVersion: v1
kind: PersistentVolume
metadata:
  name: pgadmin-pv1
spec:
  accessModes:
  - ReadWriteOnce
  capacity:
    storage: 3Gi
  hostPath:
    path: /mnt/pgadmin-data
  persistentVolumeReclaimPolicy: Retain
  storageClassName: manual



apiVersion: v1
kind: ConfigMap
metadata:
 name: pgadmin-config
 namespace: default
data:
 servers.json: |
   {
       "Servers": {
         "1": {
           "Name": "dev-db",
           "Group": "Servers",
           "Port": 5432,
           "Username": "lcidbdev",
           "Host": "faspgd20.cbenl5paeiiz.us-east-1.rds.amazonaws.com",
           "MaintenanceDB": "postgres"
         }
       }
   }


apiVersion: v1
kind: Secret
type: Opaque
metadata:
 name: pgadmin
 namespace: default
data:
 pgadmin-password: QmFrZXJhZG1pbiQzMjE=



   









     
